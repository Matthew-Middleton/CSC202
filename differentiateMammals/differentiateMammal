/****************************************************************************\
 * Purpose: To be able differentiate between a mammal and another animal
 * Algorithm: Read a file line and make it a String. While reading the file
 * convert the string at a point to a char and determine if it is Alphabetic
 * or numerical; if alphabetical concatenate it, if numerical push it on a stack
 ****************************************************************************/
package animalsHash;
import dataStructure.HashMap;
import java.util.LinkedList;
import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;

public class DifferentiateMammal
{
	private String name;
	/*array point is based on order according to the following for data: hair, feathers, eggs, milk, airborne, aquatic,
	 *  redator, toothed, backbone, breathes, venomous, fins, legs, tail, domestic, catsize, type, legs set:{0,2,4,5,6,8}, 
	 *  type range:[1,7];*/
	private String data[];
	private HashMap<String,String[]> animal;
	private LinkedList<String> list;
	
	public DifferentiateMammal()
	{
		data = new String[17];
		animal = new HashMap<String,String[]>();
	}
	/**Takes a file name and scans through the file while setting the animal names into a 
	 * @param fileName
	 */
	public void readAndSetFile(String fileName)
	{
		Scanner inputStream = null;
		try
		{
			inputStream = new Scanner(new File(fileName));
		}
		catch(FileNotFoundException fnf)
		{
			System.out.println("Error opening " + fileName);
			System.exit(1);
		}
		String temp = "";
		list = new LinkedList<String>();
		while(inputStream.hasNextLine())
		{
			if(inputStream.hasNextLine())
				temp = inputStream.next();
			for(int i=0; i<temp.length(); i++)
			{
				//parse by string
				if(Character.isAlphabetic(temp.charAt(i)))
					name += temp;
				if(Character.isDigit(temp.charAt(i)))
					list.add(temp);
			}
			int x = 0;
			while(!list.isEmpty())
			{
				data[x] = list.remove();
				x++;
			}
			animal.put(name, data);
		}
		inputStream.close();
	}
	/**Implements the isMammal method
	 * @param animal
	 * @return
	 */
	public String determine(String animal)
	{
		if(isMammal(animal))
			return animal + " is a mammal.";
		else
			return animal + " is not a mammal.";
	}
	/**Returns whether the animal is a mammal or not
	 * Operational definition: mammal = hair, milk, and backbone
	 * 	based of file parameters
	 * @return
	 */
	public boolean isMammal(String key)
	{
		String temp[] = animal.get(key);
		if(temp[0]=="1"&&temp[3]=="1"&&temp[8]=="1")//temp[0]=hair, temp[3]=milk, temp[8]=backbone
			return true;
		return false;
	}
}
